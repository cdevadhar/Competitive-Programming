import java.io.*;
import java.util.*;
public class Rental {
	static int n, m, r;
	static int[] cowMilks;
	static ArrayList<Store> stores;
	static int[] renters;
	static int[] milkProfit;
	static Scanner in;
	public static void main(String[] args) {
		in = new Scanner(System.in);
		n = in.nextInt();
		m = in.nextInt();
		r = in.nextInt();
		cowMilks = new int[n];
		milkProfit = new int[n];
		stores = new ArrayList<Store>();
		renters = new int[r];
		for (int i=0; i<n; i++) {
			cowMilks[i] = in.nextInt();
		}
		Arrays.parallelSort(cowMilks);
		
		for (int i=0; i<m; i++) {
			int amount = in.nextInt();
			int rate = in.nextInt();
			Store store = new Store(amount, rate);
			stores.add(store);
		}
		Collections.sort(stores);
	
		for (int i=0; i<r; i++) {
			renters[i] = in.nextInt();
		}
		Arrays.parallelSort(renters);
		
	}
	
	public void milkProfits() {
		for (int i=n-1; i>=0; i--) {
			int store = m-1;
			while (cowMilks[i]>0) {
				int a = stores.get(store).buyMilk(cowMilks[i]);
				cowMilks[i]=a;
				if (!stores.get(store).canBuy()) store--;
			}
		}
	}
	
	public void rentProfits() {
		
	}
}

class Store implements Comparable<Store>{
	int amount, rate;
	public Store(int amount, int rate) {
		this.amount = amount;
		this.rate = rate;
	}
	public int buyMilk(int cow) {
		if (amount-cow>=0) {
			amount-=cow;
			return 0;
		}
		else {
			int milk = amount;
			amount=0;
			return cow-milk;
		}
	}
	public boolean canBuy() {
		if (amount>0) return true;
		return false;
	}
	@Override
	public int compareTo(Store o) {
		// TODO Auto-generated method stub
		return Integer.compare(rate, o.rate);
	}
}
