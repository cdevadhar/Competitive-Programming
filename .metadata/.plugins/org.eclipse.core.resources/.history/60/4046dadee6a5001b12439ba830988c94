import java.util.*;
import java.io.*;
import java.math.BigInteger;
public class BrokenClock {
	static int t;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	    StringTokenizer st = new StringTokenizer(br.readLine());
	    t = Integer.parseInt(st.nextToken());
	    for (int i=0; i<t; i++) {
	    	st = new StringTokenizer(br.readLine());
	    	BigInteger handA = new BigInteger(st.nextToken());
	    	BigInteger handB = new BigInteger(st.nextToken());
	    	BigInteger handC = new BigInteger(st.nextToken());
	    	findTime(handA.longValue(), handB.longValue(), handC.longValue());
	    }
	}
	
	public static void findTime(long handA, long handB, long handC) {
		ArrayList<Double> angles = new ArrayList<Double>();
		double angleA = (handA/12.0)/(Math.pow(10, 10));
		angles.add(angleA);
		double angleB = (handB/12.0)/(Math.pow(10, 10));
		angles.add(angleB);
		double angleC = (handC/12.0)/(Math.pow(10, 10));
		angles.add(angleC);
		System.out.println(angleA + " " + angleB + " " + angleC);
		for (int i=0; i<angles.size(); i++) {
			double seconds = angles.get(i)/6;
			for (int j=0; j<angles.size(); j++) {
				if (i==j) continue;
				double minutes = angles.get(j)/6;
				double secs = (minutes%1)*60;
				if (secs==seconds) {
					for (int k=0; k<angles.size(); k++) {
						if (k==i) continue;
						if (k==j) continue;
						double hours = angles.get(k)/6;
						double mins = ((hours%5)/5)*60;
						if (mins==minutes) {
							System.out.println(mins);
						}
					}
				}
				
			}
		}
		
	}
}
