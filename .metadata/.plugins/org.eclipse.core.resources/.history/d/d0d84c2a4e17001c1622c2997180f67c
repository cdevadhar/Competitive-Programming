import java.util.*;
import java.io.*;
public class UpTheStrip {
	public static void main(String[] args) throws Exception{
		FastIO in = new FastIO();
		int n = in.nextInt();
		int m = in.nextInt();
//		int[] cells = new int[n];
//		cells[n-1] = 1;
//		int currCell = n-1;
//		int total = 1;
//		while (currCell>=0) {
//			cells[currCell] = total;
//			total+=cells[currCell];
//			for (int i=2; i<currCell; i++) {
//				cells[currCell/i]+=cells[currCell];
//			}
//			currCell--;
//		}
		
//		System.out.println(cells[0]);
		System.out.println(recurse(n, 0) + recurse2(n, 0));
		
	}
	
	public static int recurse(int cell, int sum) {
		if (cell==1) return 1;
		for (int y=1; y<cell; y++) {
			sum+= recurse(cell-y, sum);
		}
		
		return sum;
	}
	public static int recurse2(int cell, int sum) {
		if (cell==1) return 1;
		for (int z=2; z<=cell; z++) {
			sum+=recurse(cell/z, sum);
		}
		return sum;
	}
	
	static class FastIO {
		BufferedReader br;
	    StringTokenizer st;
	    public FastIO() throws IOException
	    {
	        br = new BufferedReader(
	            new InputStreamReader(System.in));

	    }
	    

	    public String next() throws IOException
	    {
	        while (st == null || !st.hasMoreElements()) {
	           
	            st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	    }

	    public int nextInt() throws NumberFormatException, IOException { return Integer.parseInt(next()); }

	    public long nextLong() throws NumberFormatException, IOException { return Long.parseLong(next()); }

	    public double nextDouble() throws NumberFormatException, IOException
	    {
	        return Double.parseDouble(next());
	    }

	    public String nextLine() throws IOException
	    {
	        String str = br.readLine();
	        return str;
	    }
	}
}
