import java.io.*;
import java.util.*;
public class OddEven {
	public static void main(String[] args) throws Exception {
		FastIO in = new FastIO();
		int n = in.nextInt();
		int k = in.nextInt();
		HashMap<Integer, Integer> firstOcc = new HashMap<Integer, Integer>();
		int[] a = new int[n];
		int[] sortedA = new int[n];
		for (int i=0; i<n; i++) {
			a[i] = in.nextInt();
			sortedA[i] = a[i];
			firstOcc.putIfAbsent(a[i], i);
		}
		Arrays.parallelSort(sortedA);
		int hi = a.length-1;
		int lo = 0;
		while (hi>lo) {
			int mid = (hi+lo)/2;
			
		}
	}
	public static boolean check(int cost, HashMap<Integer, Integer> firstOcc, int[] a) {
		
	}
	static class FastIO {
		BufferedReader br;
	    StringTokenizer st;
	    PrintWriter pr;
	    public FastIO() throws IOException
	    {
	        br = new BufferedReader(
	           new InputStreamReader(System.in));
	        pr = new PrintWriter(System.out);
	    }
	    

	    public String next() throws IOException
	    {
	        while (st == null || !st.hasMoreElements()) {
	           
	            st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	    }

	    public int nextInt() throws NumberFormatException, IOException { return Integer.parseInt(next()); }

	    public long nextLong() throws NumberFormatException, IOException { return Long.parseLong(next()); }

	    public double nextDouble() throws NumberFormatException, IOException
	    {
	        return Double.parseDouble(next());
	    }

	    public String nextLine() throws IOException
	    {
	        String str = br.readLine();
	        return str;
	    }
    }
}
