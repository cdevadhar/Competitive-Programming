import java.io.*;
import java.util.*;
public class YearofCow {
	static int n, k;
	static int[] ancestors;
	static Scanner in;
	public static void main(String[] args) {
		in = new Scanner(System.in);
		n = in.nextInt();
		k = in.nextInt();
		ancestors = new int[n+1];
		for (int i=0; i<n; i++) {
			ancestors[i] = -1*in.nextInt();
		}
		Arrays.parallelSort(ancestors);
		ancestors[n-1] = 0;
		int[] closestPortalsBefore = new int[n];
		int[] closestPortalsAfter = new int[n];
		for (int i=0; i<n; i++) {
			closestPortalsBefore[i] = ancestors[i]- (12+ancestors[i]%12);
			closestPortalsAfter[i] = ancestors[i]- ancestors[i]%12;
			
		}
		ArrayList<Jump> jumps = new ArrayList<Jump>();
		Jump jump = new Jump(0, ancestors[0]);
		jumps.add(jump);
		for (int i=1; i<n; i++) {
			
			jumps.add(new Jump(ancestors[i], ancestors[i-1]));
		}
		Collections.sort(jumps);
		for (int i=0; i<jumps.size(); i++) {
			System.out.println(jumps.get(i).distance);
		}
		
	}
	
	public static int timeNeeded() {
		int time=0;
		
		
		return time;
	}
	

}

class Jump implements Comparable<Jump>{
	int x, y;
	int distance;
	public Jump(int x, int y) {
		this.x = x;
		this.y = y;
		distance = Math.abs(x-y);
	}
	@Override
	public int compareTo(Jump o) {
		// TODO Auto-generated method stub
		return Integer.compare(distance, o.distance);
	}
}
