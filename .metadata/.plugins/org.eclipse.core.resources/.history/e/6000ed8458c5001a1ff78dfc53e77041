
public class Stack {
	private static class Node {
		private int value;
		private Node down;
		private Node(int value) {
			this.value = value;
		}
	}
	
	private Node top;
	
	public int peek() {
		return top.value;
	}
	
	public void add(int value) {
		Node newNode = new Node(value);
		newNode.down = top;
		top = newNode;
	}
	
	public int remove() {
		int returnval = top.value;
		top = top.down;
		return returnval;
		
	}
	// Makes a stack of disks in ascending order from bottom to top.
	private static void makeDisks(int numberOfDisks, Stack originalStack) {
		for(int i = numberOfDisks; i>0; i--) {
			originalStack.add(i);
		}
	}
	// Moves the top disk of a given stack to the top of a destination stack.
	private void switchDisk(Stack originalStack, Stack destination) {
		destination.add(originalStack.remove());
		
	}
	
	public void moveDisks(int numberOfDisks,Stack originalStack,Stack buffer,Stack destination) {
		if (numberOfDisks == 1) {
			switchDisk(originalStack, destination);
		}
		else if (numberOfDisks ==2) {
			switchDisk(originalStack, buffer);
			switchDisk(originalStack, destination);
			switchDisk(buffer, destination);
		}
		else {
			moveDisks(numberOfDisks-1, originalStack, destination, buffer);
			switchDisk(originalStack, destination);
			moveDisks(numberOfDisks-1, buffer, originalStack, destination);

		}
		
	}
	
	public static void main(String[] args) {
		Stack originalStack = new Stack();
		Stack buffer = new Stack();
		Stack destination = new Stack();
		makeDisks(3, originalStack);
		System.out.println(originalStack.peek());
		originalStack.moveDisks(3, originalStack, buffer, destination);
		
	}

	

	
	
}
