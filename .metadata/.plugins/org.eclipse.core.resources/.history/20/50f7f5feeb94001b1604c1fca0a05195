import java.io.*;
import java.util.*;
public class WheresBessie {
	static int n;
	static char[][] grid;
	public static void main(String[] args) throws IOException {
		BufferedReader bi = new BufferedReader(new FileReader(new File("USACOinput1")));
		StringTokenizer st = new StringTokenizer(bi.readLine());
		n = Integer.parseInt(st.nextToken());
		grid = new char[n][n];
		for (int i=0; i<n; i++) {
			st = new StringTokenizer(bi.readLine());
			String s = st.nextToken();
			for (int j=0; j<n; j++) {
				char a = s.charAt(j);
				grid[i][j] = a;
			}
		}
		floodfill(new PCL(0, 0, 3, 3));
	}
	public static void floodfill(PCL pcl) {
		Stack<Coord> stack = new Stack<Coord>();
		boolean[][] visited = new boolean[n][n];
		visited[pcl.x1][pcl.y1] = true;
		stack.add(new Coord(pcl.x1, pcl.y1));
		while (!stack.isEmpty()) {
			Coord current = stack.pop();
			if (current.x+1<=pcl.x2 && !visited[current.x+1][current.y]) {
				visited[current.x+1][current.y] = true;
				stack.add(new Coord(current.x+1, current.y));
			}
			if (current.y+1<=pcl.y2 && !visited[current.x][current.y+1]) {
				visited[current.x][current.y+1] = true;
				stack.add(new Coord(current.x, current.y+1));
			}
			if (current.x-1>=pcl.x1 && !visited[current.x-1][current.y]) {
				visited[current.x-1][current.y] = true;
				stack.add(new Coord(current.x-1, current.y));
			}
			if (current.y-1>=pcl.y1 && !visited[current.x][current.y-1]) {
				visited[current.x][current.y-1] = true;
				stack.add(new Coord(current.x, current.y-1));
			}
		}
		
	}
}

class PCL {
	int x1, y1, x2, y2;
	public PCL(int x1, int y1, int x2, int y2) {
		this.x1 = x1;
		this.y1 = y1;
		this.x2 = x2;
		this.y2 = y2;
	}
}

class Coord {
	int x, y;
	public Coord(int x, int y) {
		this.x = x;
		this.y = y;
	}
}
