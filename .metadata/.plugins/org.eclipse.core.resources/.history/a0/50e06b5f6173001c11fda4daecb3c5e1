import java.io.*;
import java.util.*;
public class StrongestBuild {
	public static void main(String[] args) throws Exception {
		FastIO in = new FastIO();
		int n = in.nextInt();
		ArrayList<ArrayList<Integer>> slots = new ArrayList<ArrayList<Integer>>();
		HashSet<String> banned = new HashSet<String>();
		for (int i=0; i<n; i++) {
			int size = in.nextInt();
			slots.add(new ArrayList<Integer>(size));
			for (int j=0; j<size; j++) {
				slots.get(i).add(in.nextInt());
			}
		}
		int m = in.nextInt();
		for (int i=0; i<m; i++) {
			String build = "";
			for (int j=0; j<n; j++) {
				build+=in.next()+" ";
			}
			banned.add(build);
		}
	}
	static class FastIO {
		BufferedReader br;
	    StringTokenizer st;
	    public FastIO() throws IOException
	    {
	        br = new BufferedReader(
	            new InputStreamReader(System.in));

	    }
	    

	    public String next() throws IOException
	    {
	        while (st == null || !st.hasMoreElements()) {
	           
	            st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	    }

	    public int nextInt() throws NumberFormatException, IOException { return Integer.parseInt(next()); }

	    public long nextLong() throws NumberFormatException, IOException { return Long.parseLong(next()); }

	    public double nextDouble() throws NumberFormatException, IOException
	    {
	        return Double.parseDouble(next());
	    }

	    public String nextLine() throws IOException
	    {
	        String str = br.readLine();
	        return str;
	    }
	}
}
